-- String 배열 정렬하고싶을때 --


  Arrays.sort(strings, new Comparator<String>() {
        @Override
        public int compare(String o1, String o2) {
          return 0;
      });


     o1 이랑 o2 를 비교해준다. 배열에 담긴 모든 수들을 정렬해주는데,
     int compare 함수안에서 조건을 걸어줄수 있음.
     두개씩을 전부 어떻게 체크해줄지 정해줄수 있음.

     ex)
     Arrays.sort(strings, new Comparator<String>() {
       @Override
       public int compare(String o1, String o2) {
         if (o1.charAt(n) > o2.charAt(n))  // o1이 o2보다 더 앞에 있을때 --> 정렬 필요없음 --> Return 1;
           return 1;
         else if(o1.charAt(n) == o2.charAt(n)) { // o1이랑 o2의 사전 정렬이 똑같으면?
           return o1.compareTo(o2); --> o1 과 o2의 전체 단어의 배열을 보고 둘중에 먼저나오는것을 앞에 정렬시켜줌.
         }
         else return -1; --> 나머지는 return -1;
       }
     });
     저렇게 정렬하면 배열이 저 조건대로 정렬이 됌.

-- Dynamic Programming(동적 프로그래밍) --
    링크 : https://shanepark.tistory.com/183


